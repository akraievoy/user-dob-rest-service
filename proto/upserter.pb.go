// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upserter.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

type UserBatch struct {
	Batch                []*User  `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBatch) Reset()         { *m = UserBatch{} }
func (m *UserBatch) String() string { return proto.CompactTextString(m) }
func (*UserBatch) ProtoMessage()    {}
func (*UserBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{1}
}

func (m *UserBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserBatch.Unmarshal(m, b)
}
func (m *UserBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserBatch.Marshal(b, m, deterministic)
}
func (m *UserBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBatch.Merge(m, src)
}
func (m *UserBatch) XXX_Size() int {
	return xxx_messageInfo_UserBatch.Size(m)
}
func (m *UserBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBatch.DiscardUnknown(m)
}

var xxx_messageInfo_UserBatch proto.InternalMessageInfo

func (m *UserBatch) GetBatch() []*User {
	if m != nil {
		return m.Batch
	}
	return nil
}

type UpsertFeedback struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertFeedback) Reset()         { *m = UpsertFeedback{} }
func (m *UpsertFeedback) String() string { return proto.CompactTextString(m) }
func (*UpsertFeedback) ProtoMessage()    {}
func (*UpsertFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{2}
}

func (m *UpsertFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertFeedback.Unmarshal(m, b)
}
func (m *UpsertFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertFeedback.Marshal(b, m, deterministic)
}
func (m *UpsertFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertFeedback.Merge(m, src)
}
func (m *UpsertFeedback) XXX_Size() int {
	return xxx_messageInfo_UpsertFeedback.Size(m)
}
func (m *UpsertFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertFeedback proto.InternalMessageInfo

func (m *UpsertFeedback) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpsertFeedback) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type BatchFeedback struct {
	Feedbacks            []*UpsertFeedback `protobuf:"bytes,1,rep,name=feedbacks,proto3" json:"feedbacks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BatchFeedback) Reset()         { *m = BatchFeedback{} }
func (m *BatchFeedback) String() string { return proto.CompactTextString(m) }
func (*BatchFeedback) ProtoMessage()    {}
func (*BatchFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{3}
}

func (m *BatchFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchFeedback.Unmarshal(m, b)
}
func (m *BatchFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchFeedback.Marshal(b, m, deterministic)
}
func (m *BatchFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchFeedback.Merge(m, src)
}
func (m *BatchFeedback) XXX_Size() int {
	return xxx_messageInfo_BatchFeedback.Size(m)
}
func (m *BatchFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_BatchFeedback proto.InternalMessageInfo

func (m *BatchFeedback) GetFeedbacks() []*UpsertFeedback {
	if m != nil {
		return m.Feedbacks
	}
	return nil
}

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{4}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59e8be316d6304ea, []int{5}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "tsv_load.proto.User")
	proto.RegisterType((*UserBatch)(nil), "tsv_load.proto.UserBatch")
	proto.RegisterType((*UpsertFeedback)(nil), "tsv_load.proto.UpsertFeedback")
	proto.RegisterType((*BatchFeedback)(nil), "tsv_load.proto.BatchFeedback")
	proto.RegisterType((*VersionRequest)(nil), "tsv_load.proto.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "tsv_load.proto.VersionResponse")
}

func init() { proto.RegisterFile("upserter.proto", fileDescriptor_59e8be316d6304ea) }

var fileDescriptor_59e8be316d6304ea = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x4e, 0xea, 0x40,
	0x14, 0xc7, 0x29, 0x50, 0xa0, 0x07, 0xe8, 0xbd, 0x99, 0xb0, 0xe8, 0x25, 0xb9, 0x8a, 0xe3, 0x86,
	0x68, 0xc2, 0x02, 0x17, 0x6e, 0x5c, 0x11, 0xe3, 0x4a, 0x34, 0x99, 0x04, 0x17, 0x6e, 0x48, 0x3f,
	0x8e, 0xd2, 0x48, 0x3b, 0x75, 0xa6, 0xe5, 0x71, 0x7c, 0x56, 0xd3, 0x33, 0x05, 0x53, 0xd1, 0x55,
	0xff, 0x1f, 0xd3, 0x9e, 0xdf, 0xe9, 0x80, 0x5b, 0x64, 0x1a, 0x55, 0x8e, 0x6a, 0x96, 0x29, 0x99,
	0x4b, 0xe6, 0xe6, 0x7a, 0xb7, 0xde, 0x4a, 0x3f, 0x32, 0x9e, 0x87, 0xd0, 0x5e, 0x69, 0x54, 0xcc,
	0x85, 0x66, 0x1c, 0x79, 0xd6, 0xc4, 0x9a, 0xda, 0xa2, 0x19, 0x47, 0x8c, 0x41, 0x3b, 0xf5, 0x13,
	0xf4, 0x9a, 0x13, 0x6b, 0xea, 0x08, 0xd2, 0x6c, 0x04, 0x36, 0x26, 0x7e, 0xbc, 0xf5, 0x5a, 0x14,
	0x1a, 0xc3, 0xce, 0x60, 0x90, 0x6d, 0x64, 0x8a, 0xeb, 0xb4, 0x48, 0x02, 0x54, 0x5e, 0x9b, 0xca,
	0x3e, 0x65, 0x0f, 0x14, 0xf1, 0x6b, 0x70, 0xca, 0x21, 0x0b, 0x3f, 0x0f, 0x37, 0xec, 0x02, 0xec,
	0xa0, 0x14, 0x9e, 0x35, 0x69, 0x4d, 0xfb, 0xf3, 0xd1, 0xac, 0x4e, 0x34, 0x2b, 0x4f, 0x0a, 0x73,
	0x84, 0x3f, 0x82, 0xbb, 0x22, 0xfe, 0x3b, 0xc4, 0x28, 0xf0, 0xc3, 0x37, 0xe6, 0x41, 0x57, 0x17,
	0x61, 0x88, 0x5a, 0x13, 0x6c, 0x4f, 0xec, 0x2d, 0x3b, 0x87, 0x21, 0x2a, 0x25, 0xd5, 0x3a, 0x41,
	0xad, 0xfd, 0xd7, 0x3d, 0xfa, 0x80, 0xc2, 0xa5, 0xc9, 0xf8, 0x12, 0x86, 0x44, 0x71, 0xf8, 0xde,
	0x0d, 0x38, 0x2f, 0x95, 0xd6, 0x15, 0xd1, 0xc9, 0x11, 0x51, 0x0d, 0x41, 0x7c, 0xbd, 0xc0, 0xff,
	0x82, 0xfb, 0x84, 0x4a, 0xc7, 0x32, 0x15, 0xf8, 0x5e, 0xa0, 0xce, 0xf9, 0x25, 0xfc, 0x39, 0x24,
	0x3a, 0x93, 0xa9, 0xc6, 0x12, 0x79, 0x67, 0x22, 0x42, 0x76, 0xc4, 0xde, 0xce, 0x3f, 0x2c, 0xe8,
	0xad, 0xaa, 0xfb, 0x61, 0xb7, 0xd0, 0x31, 0x9a, 0xfd, 0xfb, 0xe9, 0x97, 0x10, 0xf6, 0xf8, 0xff,
	0xf7, 0xaa, 0xb6, 0x0d, 0x6f, 0xb0, 0x7b, 0xe8, 0x56, 0xf3, 0xd9, 0xd1, 0x1e, 0x75, 0xd4, 0xf1,
	0xe9, 0xaf, 0xbd, 0x01, 0xe7, 0x8d, 0x45, 0xf7, 0xd9, 0xa6, 0x2a, 0xe8, 0xd0, 0xe3, 0xea, 0x33,
	0x00, 0x00, 0xff, 0xff, 0xed, 0xba, 0x31, 0x40, 0x4f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UpserterClient is the client API for Upserter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpserterClient interface {
	Upsert(ctx context.Context, in *UserBatch, opts ...grpc.CallOption) (*BatchFeedback, error)
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type upserterClient struct {
	cc *grpc.ClientConn
}

func NewUpserterClient(cc *grpc.ClientConn) UpserterClient {
	return &upserterClient{cc}
}

func (c *upserterClient) Upsert(ctx context.Context, in *UserBatch, opts ...grpc.CallOption) (*BatchFeedback, error) {
	out := new(BatchFeedback)
	err := c.cc.Invoke(ctx, "/tsv_load.proto.Upserter/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upserterClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/tsv_load.proto.Upserter/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpserterServer is the server API for Upserter service.
type UpserterServer interface {
	Upsert(context.Context, *UserBatch) (*BatchFeedback, error)
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterUpserterServer(s *grpc.Server, srv UpserterServer) {
	s.RegisterService(&_Upserter_serviceDesc, srv)
}

func _Upserter_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpserterServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv_load.proto.Upserter/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpserterServer).Upsert(ctx, req.(*UserBatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Upserter_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpserterServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv_load.proto.Upserter/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpserterServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Upserter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tsv_load.proto.Upserter",
	HandlerType: (*UpserterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upsert",
			Handler:    _Upserter_Upsert_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Upserter_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upserter.proto",
}
